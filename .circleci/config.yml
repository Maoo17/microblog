# Python CircleCI 2.0 configuration file
version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: prod
      DH_IMAGE_NAME: project_prod
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  test:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Run tests with docker
          command: |
            sudo apt-get install python3-venv
            python3 -m venv venv
            . venv/bin/activate
            make test
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image production
          command: docker-compose up --build -d $IMAGE_NAME
      - run:
          name: Tag build with latest
          command: docker tag $DH_IMAGE_NAME:latest maoo17/microblog-production:latest
      - run:
          name: Archive Docker image
          command: docker save -o image.tar maoo17/microblog-production
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKER_HUB_PASS" | docker login -u "$DOCKER_HUB_USER" --password-stdin
            docker push maoo17/microblog-production:latest
  application-setup:
    executor: docker-publisher
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Install for playbook run
          command: |
          sudo apt install python3-pip
          sudo pip3 install ansible
      - run:
          name: Set environment variable to file
          command: echo $ANSIBLE_VAULT_PASS_CI > ansible/ci_vault_pass.txt
      - run:
          name: Decrypting
          command: ansible-vault decrypt ansible/aws_keys.yml --vault-password-file ansible/ci_vault_pass.txt -vvvvv
      - run:
          name: Run ansible-playbook application
          command: ansible-playbook ansible/gather_aws_instances.yml ansible/application.yml
workflows:
      version: 2
      build-master:
        jobs:
          # - test:
          #   filters:
          #     branches:
          #       only: master
          # - build:
          #     requires:
          #       - test
          #     filters:
          #       branches:
          #         only: master
          # - publish-latest:
          #     requires:
          #       - build
          #     filters:
          #       branches:
          #         only: master
          - application-setup:
              # requires:
              #   - publish-latest
              filters:
                branches:
                  only: master